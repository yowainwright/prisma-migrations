name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Check formatting
        run: bunx prettier --check src tests

      - name: Lint code
        run: bunx oxlint src tests

      - name: Type check
        run: bunx tsc --noEmit

      - name: Check build
        run: bun run build

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build

      - name: Generate Prisma client
        run: bunx prisma generate || echo "Prisma schema not found, skipping generate"

      - name: Run unit tests
        run: bun run test

  cli-smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build

      - name: Test CLI functionality (basic smoke test)
        run: |
          # Test that CLI can be executed without errors
          timeout 10s node dist/cli.js --help || true

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build

      - name: Generate Prisma Client for e2e tests
        run: |
          mkdir -p prisma
          cat > prisma/schema.prisma << 'EOF'
          datasource db {
            provider = "postgresql"
            url      = env("DATABASE_URL")
          }

          generator client {
            provider = "prisma-client-js"
          }
          EOF
          bunx prisma generate

      - name: Start all PostgreSQL containers
        run: docker compose -f tests/e2e/docker-compose.yml up -d

      - name: Wait for PostgreSQL containers
        run: |
          echo "Waiting for all PostgreSQL containers to be ready..."
          for port in 5435 5436 5437 5438; do
            echo "Checking port $port..."
            for i in {1..60}; do
              if pg_isready -h localhost -p $port -U test 2>/dev/null; then
                echo "PostgreSQL on port $port is ready"
                break
              fi
              if [ $i -eq 60 ]; then
                echo "PostgreSQL on port $port failed to become ready"
                exit 1
              fi
              sleep 1
            done
          done
          echo "All PostgreSQL containers are ready"

      - name: Run CLI e2e tests
        run: bun test tests/e2e/cli-commands.spec.ts --timeout 120000

      - name: Run Bun e2e tests
        run: bun test tests/e2e/bun-only.spec.ts --timeout 120000

      - name: Run new project codelab e2e tests
        run: bun test tests/e2e/codelab-new-project.spec.ts --timeout 120000

      - name: Run migrate codelab e2e tests
        run: bun test tests/e2e/codelab-migrate-existing.spec.ts --timeout 120000

      - name: Stop PostgreSQL containers
        if: always()
        run: docker compose -f tests/e2e/docker-compose.yml down
